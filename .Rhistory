knitr::opts_chunk$set(echo = TRUE)
# calcul de la somme d'un vecteur
vect = c(1, 2, 3, 4, 5);
sum(vect);
# calcul de la somme d'une matrice
mat = matrix(c(1, 2, 3, 4, 5, 6), 2, 3);
sum(mat);
mat = matrix(c(1, 2, 3, 4, 5, 6), 2, 3);
colSums(mat);
M = matrix(c(1, 5, 123, 14, 536, 46, 327, 80, 99, 104, 2036, 112), 4, 3);
M[11];
# première méthode
D_methode_1 = data.frame(datasets::airquality);
# deuxième méthode
library(datasets); data("airquality")
D_methode_2 = data.frame(airquality)
D_methode_2
summary(D_methode_1)
# importation de la table en utilisant la fonction read.table()
importe_table = read.table(file.choose(), header=TRUE, sep='\t', dec=',')
# importation du fichier sous forme de data.frame
D = data.frame(importe_table)
D
colnames(D)
individus_nums = (paste("individus", 1:152))
rowNames(D) <- individus_nums
individus_nums = (paste("individus", 1:152))
rownames(D) <- individus_nums
D
# l'IMC = poids / (taille * 0.01) ^ 2
D['IMC'] = D['poids'] / (D['taille'] * 0.01)^2
D
# Extraction de D les lignes correspondant aux enfants ayanr un IMC < 15 et un age <=3,5
new_D = D[D['IMC'] < 15 & D['an'] <= 3.5,];
new_D;
# le nombre des enfants vérifiant ces conditions
nrow(new_D);
write.table(new_D, file="enfants.txt", sep="\t")
E = read.table(file.choose(), header=TRUE, sep="\t", dec=",")
E
PTL1 = E$PTL
E['PTL1'] = replace(PTL1, PTL1 >= 2, 2)
E
FVT1 = E$FVT
E["FVT1"] = replace(FVT1, FVT1 >= 2, 2)
E
E[order(E$BWT, decreasing = FALSE),]
x=E[E$SMOKE == 1 & E$RACE < 3,];
x;
knit_with_parameters('D:/études/aix marseille/Cours/Statistique pour la biologie/TP2_LOUAIkB.Rmd', encoding = 'UTF-8')
knitr::opts_chunk$set(echo = TRUE)
# calcul de la somme d'un vecteur
vect = c(1, 2, 3, 4, 5);
sum(vect);
# calcul de la somme d'une matrice
mat = matrix(c(1, 2, 3, 4, 5, 6), 2, 3);
sum(mat);
mat = matrix(c(1, 2, 3, 4, 5, 6), 2, 3);
colSums(mat);
M = matrix(c(1, 5, 123, 14, 536, 46, 327, 80, 99, 104, 2036, 112), 4, 3);
M[11];
library()
# première méthode
D_methode_1 = data.frame(datasets::airquality);
# deuxième méthode
library(datasets); data("airquality")
D_methode_2 = data.frame(airquality)
D_methode_2
summary(D_methode_1)
# importation de la table en utilisant la fonction read.table()
importe_table = read.table(file.choose(), header=TRUE, sep='\t', dec=',')
# importation du fichier sous forme de data.frame
D = data.frame(importe_table)
D
colnames(D)
individus_nums = (paste("individus", 1:152))
rownames(D) <- individus_nums
D
# l'IMC = poids / (taille * 0.01) ^ 2
D['IMC'] = D['poids'] / (D['taille'] * 0.01)^2
D
# Extraction de D les lignes correspondant aux enfants ayanr un IMC < 15 et un age <=3,5
new_D = D[D['IMC'] < 15 & D['an'] <= 3.5,];
new_D;
# le nombre des enfants vérifiant ces conditions
nrow(new_D);
write.table(new_D, file="enfants.txt", sep="\t")
E = read.table(file.choose(), header=TRUE, sep="\t", dec=",")
E
PTL1 = E$PTL
E['PTL1'] = replace(PTL1, PTL1 >= 2, 2)
E
FVT1 = E$FVT
E["FVT1"] = replace(FVT1, FVT1 >= 2, 2)
E
E[order(E$BWT, decreasing = FALSE),]
x=E[E$SMOKE == 1 & E$RACE < 3,];
x;
